import{_ as p}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as t,c as r,a as s,d as n,e as i,w as e,b as l,o as c}from"./app-Chc13kEl.js";const d={},v=l(`<h1 id="backend-проект" tabindex="-1"><a class="header-anchor" href="#backend-проект"><span>Backend-проект</span></a></h1><p>Backend представлен в виде <strong>Java Spring</strong> приложения. <strong>Maven</strong> используется в качестве фреймворка для автоматизации сборки проектов на основе описания их описания в файле <strong>pom.xml</strong> В проекте используется следующие основные библиотеки и расширения</p><ul><li>Spring Boot - для автономного запуска Java Spring приложения;</li></ul><hr><ul><li>PostgreSQL - для связи с СУБД PostgreSQL;</li></ul><hr><ul><li>Lombok - удобная библиотека для сокращения количества кода;</li></ul><hr><ul><li>JsonWebToken - библиотека для работы с JsonWebToken. Используется при авторизации и регистрации;</li></ul><hr><ul><li>Hibernate - Движок для работы с базами данных посредством ORM;</li></ul><h2 id="схема-проекта-в-виде-дерева-ascii" tabindex="-1"><a class="header-anchor" href="#схема-проекта-в-виде-дерева-ascii"><span>Схема проекта в виде дерева <strong>ASCII</strong></span></a></h2><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>Dockerfile</span></span>
<span class="line"><span>pom.xml</span></span>
<span class="line"><span>src/</span></span>
<span class="line"><span>├─ main/</span></span>
<span class="line"><span>│  ├─ resources/</span></span>
<span class="line"><span>│  │  ├─ materials/</span></span>
<span class="line"><span>│  │  │  ├─ features.json</span></span>
<span class="line"><span>│  │  │  ├─ lessons/</span></span>
<span class="line"><span>│  │  ├─ application.properties</span></span>
<span class="line"><span>│  │  ├─ data.sql</span></span>
<span class="line"><span>│  ├─ java/</span></span>
<span class="line"><span>│  │  ├─ ru/</span></span>
<span class="line"><span>│  │  │  ├─ atomskills/</span></span>
<span class="line"><span>│  │  │  │  ├─ back/</span></span>
<span class="line"><span>│  │  │  │  │  ├─ configs/</span></span>
<span class="line"><span>│  │  │  │  │  │  ├─ JwtAuthFilter.java</span></span>
<span class="line"><span>│  │  │  │  │  │  ├─ RestAdviser.java</span></span>
<span class="line"><span>│  │  │  │  │  │  ├─ SecurityConfig.java</span></span>
<span class="line"><span>│  │  │  │  │  ├─ controllers/</span></span>
<span class="line"><span>│  │  │  │  │  │  ├─ AuthenticationController.java</span></span>
<span class="line"><span>│  │  │  │  │  │  ├─ LessonsController.java</span></span>
<span class="line"><span>│  │  │  │  │  │  ├─ SomeEntityController.java</span></span>
<span class="line"><span>│  │  │  │  │  │  ├─ TasksController.java</span></span>
<span class="line"><span>│  │  │  │  │  │  ├─ TopicsController.java</span></span>
<span class="line"><span>│  │  │  │  │  ├─ dto/</span></span>
<span class="line"><span>│  │  │  │  │  │  ├─ AuthRequest.java</span></span>
<span class="line"><span>│  │  │  │  │  │  ├─ LessonDto.java</span></span>
<span class="line"><span>│  │  │  │  │  │  ├─ LessonShortDto.java</span></span>
<span class="line"><span>│  │  │  │  │  │  ├─ LoginResponse.java</span></span>
<span class="line"><span>│  │  │  │  │  │  ├─ RefreshRequest.java</span></span>
<span class="line"><span>│  │  │  │  │  │  ├─ TaskDto.java</span></span>
<span class="line"><span>│  │  │  │  │  │  ├─ TaskShortDto.java</span></span>
<span class="line"><span>│  │  │  │  │  ├─ models/</span></span>
<span class="line"><span>│  │  │  │  │  │  ├─ AppUser.java</span></span>
<span class="line"><span>│  │  │  │  │  │  ├─ Feature.java</span></span>
<span class="line"><span>│  │  │  │  │  │  ├─ Lesson.java</span></span>
<span class="line"><span>│  │  │  │  │  │  ├─ Role.java</span></span>
<span class="line"><span>│  │  │  │  │  │  ├─ SomeEntity.java</span></span>
<span class="line"><span>│  │  │  │  │  │  ├─ Task.java</span></span>
<span class="line"><span>│  │  │  │  │  │  ├─ TaskProgress.java</span></span>
<span class="line"><span>│  │  │  │  │  │  ├─ TaskSubmission.java</span></span>
<span class="line"><span>│  │  │  │  │  │  ├─ Topic.java</span></span>
<span class="line"><span>│  │  │  │  │  │  ├─ Trait.java</span></span>
<span class="line"><span>│  │  │  │  │  ├─ repositories/</span></span>
<span class="line"><span>│  │  │  │  │  │  ├─ AppUserRepository.java</span></span>
<span class="line"><span>│  │  │  │  │  │  ├─ FeaturesRepository.java</span></span>
<span class="line"><span>│  │  │  │  │  │  ├─ LessonsRepository.java</span></span>
<span class="line"><span>│  │  │  │  │  │  ├─ SomeEntityRepository.java</span></span>
<span class="line"><span>│  │  │  │  │  │  ├─ TaskProgressRepository.java</span></span>
<span class="line"><span>│  │  │  │  │  │  ├─ TasksRepository.java</span></span>
<span class="line"><span>│  │  │  │  │  │  ├─ TopicsRepository.java</span></span>
<span class="line"><span>│  │  │  │  │  │  ├─ TraitsRepository.java</span></span>
<span class="line"><span>│  │  │  │  │  │  ├─ specifications/</span></span>
<span class="line"><span>│  │  │  │  │  │  │  ├─ SomeEntityRepositorySpecification.java</span></span>
<span class="line"><span>│  │  │  │  │  ├─ services/</span></span>
<span class="line"><span>│  │  │  │  │  │  ├─ AppUserService.java</span></span>
<span class="line"><span>│  │  │  │  │  │  ├─ AuthenticationService.java</span></span>
<span class="line"><span>│  │  │  │  │  │  ├─ FileLoader.java</span></span>
<span class="line"><span>│  │  │  │  │  │  ├─ LessonsService.java</span></span>
<span class="line"><span>│  │  │  │  │  │  ├─ SomeEntity.java</span></span>
<span class="line"><span>│  │  │  │  │  │  ├─ TasksService.java</span></span>
<span class="line"><span>│  │  │  │  │  │  ├─ TopicsService.java</span></span>
<span class="line"><span>│  │  │  │  │  ├─ utils/</span></span>
<span class="line"><span>│  │  │  │  │  │  ├─ FilesUtil.java</span></span>
<span class="line"><span>│  │  │  │  │  │  ├─ JwtUtil.java</span></span>
<span class="line"><span>│  │  │  │  │  ├─ BackApplication.java</span></span>
<span class="line"><span>├─ test/</span></span>
<span class="line"><span>│  ├─ java/</span></span>
<span class="line"><span>│  │  ├─ ru/</span></span>
<span class="line"><span>│  │  │  ├─ atomskills/</span></span>
<span class="line"><span>│  │  │  │  ├─ back/</span></span>
<span class="line"><span>│  │  │  │  │  ├─ BackApplicationTests.java</span></span>
<span class="line"><span>Dockerfile</span></span>
<span class="line"><span>pom.xml</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><br><h2 id="dockerfile" tabindex="-1"><a class="header-anchor" href="#dockerfile"><span>Dockerfile</span></a></h2><p>Файл с описанием команд для развертки с помощью Docker</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>FROM mirror.gcr.io/eclipse-temurin:21-jdk-jammy</span></span>
<span class="line"><span></span></span>
<span class="line"><span>WORKDIR /app</span></span>
<span class="line"><span></span></span>
<span class="line"><span>COPY .mvn/ .mvn</span></span>
<span class="line"><span>COPY mvnw pom.xml ./</span></span>
<span class="line"><span></span></span>
<span class="line"><span>RUN sed -i &#39;s/\\r$//&#39; ./mvnw &amp;&amp; chmod +x ./mvnw &amp;&amp; ./mvnw dependency:resolve</span></span>
<span class="line"><span></span></span>
<span class="line"><span>COPY src ./src</span></span>
<span class="line"><span></span></span>
<span class="line"><span>CMD [&quot;./mvnw&quot;, &quot;spring-boot:run&quot;]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><br><h2 id="pom-xml" tabindex="-1"><a class="header-anchor" href="#pom-xml"><span>pom.xml</span></a></h2><p>Описывает конфигурацию проекта, используемые библиотеки, фреймворки и расширения</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span>
<span class="line"><span>&lt;project xmlns=&quot;http://maven.apache.org/POM/4.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot;</span></span>
<span class="line"><span>	xsi:schemaLocation=&quot;http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd&quot;&gt;</span></span>
<span class="line"><span>	&lt;modelVersion&gt;4.0.0&lt;/modelVersion&gt;</span></span>
<span class="line"><span>	&lt;parent&gt;</span></span>
<span class="line"><span>		&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span></span>
<span class="line"><span>		&lt;artifactId&gt;spring-boot-starter-parent&lt;/artifactId&gt;</span></span>
<span class="line"><span>		&lt;version&gt;3.3.0&lt;/version&gt;</span></span>
<span class="line"><span>		&lt;relativePath/&gt; &lt;!-- lookup parent from repository --&gt;</span></span>
<span class="line"><span>	&lt;/parent&gt;</span></span>
<span class="line"><span>	&lt;groupId&gt;ru.atomskills&lt;/groupId&gt;</span></span>
<span class="line"><span>	&lt;artifactId&gt;back&lt;/artifactId&gt;</span></span>
<span class="line"><span>	&lt;version&gt;0.0.1-SNAPSHOT&lt;/version&gt;</span></span>
<span class="line"><span>	&lt;name&gt;back&lt;/name&gt;</span></span>
<span class="line"><span>	&lt;description&gt;Demo project for Spring Boot&lt;/description&gt;</span></span>
<span class="line"><span>	&lt;properties&gt;</span></span>
<span class="line"><span>		&lt;java.version&gt;21&lt;/java.version&gt;</span></span>
<span class="line"><span>	&lt;/properties&gt;</span></span>
<span class="line"><span>	&lt;dependencies&gt;</span></span>
<span class="line"><span>		&lt;dependency&gt;</span></span>
<span class="line"><span>			&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span></span>
<span class="line"><span>			&lt;artifactId&gt;spring-boot-starter-data-jpa&lt;/artifactId&gt;</span></span>
<span class="line"><span>		&lt;/dependency&gt;</span></span>
<span class="line"><span>		&lt;dependency&gt;</span></span>
<span class="line"><span>			&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span></span>
<span class="line"><span>			&lt;artifactId&gt;spring-boot-starter-security&lt;/artifactId&gt;</span></span>
<span class="line"><span>		&lt;/dependency&gt;</span></span>
<span class="line"><span>		&lt;dependency&gt;</span></span>
<span class="line"><span>			&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span></span>
<span class="line"><span>			&lt;artifactId&gt;spring-boot-starter-validation&lt;/artifactId&gt;</span></span>
<span class="line"><span>		&lt;/dependency&gt;</span></span>
<span class="line"><span>		&lt;dependency&gt;</span></span>
<span class="line"><span>			&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span></span>
<span class="line"><span>			&lt;artifactId&gt;spring-boot-starter-web&lt;/artifactId&gt;</span></span>
<span class="line"><span>		&lt;/dependency&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>		&lt;dependency&gt;</span></span>
<span class="line"><span>			&lt;groupId&gt;org.postgresql&lt;/groupId&gt;</span></span>
<span class="line"><span>			&lt;artifactId&gt;postgresql&lt;/artifactId&gt;</span></span>
<span class="line"><span>			&lt;scope&gt;runtime&lt;/scope&gt;</span></span>
<span class="line"><span>		&lt;/dependency&gt;</span></span>
<span class="line"><span>		&lt;dependency&gt;</span></span>
<span class="line"><span>			&lt;groupId&gt;org.projectlombok&lt;/groupId&gt;</span></span>
<span class="line"><span>			&lt;artifactId&gt;lombok&lt;/artifactId&gt;</span></span>
<span class="line"><span>			&lt;optional&gt;true&lt;/optional&gt;</span></span>
<span class="line"><span>		&lt;/dependency&gt;</span></span>
<span class="line"><span>		&lt;dependency&gt;</span></span>
<span class="line"><span>			&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span></span>
<span class="line"><span>			&lt;artifactId&gt;spring-boot-starter-test&lt;/artifactId&gt;</span></span>
<span class="line"><span>			&lt;scope&gt;test&lt;/scope&gt;</span></span>
<span class="line"><span>		&lt;/dependency&gt;</span></span>
<span class="line"><span>		&lt;dependency&gt;</span></span>
<span class="line"><span>			&lt;groupId&gt;org.springframework.security&lt;/groupId&gt;</span></span>
<span class="line"><span>			&lt;artifactId&gt;spring-security-test&lt;/artifactId&gt;</span></span>
<span class="line"><span>			&lt;scope&gt;test&lt;/scope&gt;</span></span>
<span class="line"><span>		&lt;/dependency&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>		&lt;dependency&gt;</span></span>
<span class="line"><span>			&lt;groupId&gt;io.jsonwebtoken&lt;/groupId&gt;</span></span>
<span class="line"><span>			&lt;artifactId&gt;jjwt-api&lt;/artifactId&gt;</span></span>
<span class="line"><span>			&lt;version&gt;0.11.5&lt;/version&gt;</span></span>
<span class="line"><span>		&lt;/dependency&gt;</span></span>
<span class="line"><span>		&lt;dependency&gt;</span></span>
<span class="line"><span>			&lt;groupId&gt;io.jsonwebtoken&lt;/groupId&gt;</span></span>
<span class="line"><span>			&lt;artifactId&gt;jjwt-impl&lt;/artifactId&gt;</span></span>
<span class="line"><span>			&lt;version&gt;0.11.5&lt;/version&gt;</span></span>
<span class="line"><span>		&lt;/dependency&gt;</span></span>
<span class="line"><span>		&lt;dependency&gt;</span></span>
<span class="line"><span>			&lt;groupId&gt;io.jsonwebtoken&lt;/groupId&gt;</span></span>
<span class="line"><span>			&lt;artifactId&gt;jjwt-jackson&lt;/artifactId&gt;</span></span>
<span class="line"><span>			&lt;version&gt;0.11.5&lt;/version&gt;</span></span>
<span class="line"><span>		&lt;/dependency&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>		&lt;dependency&gt;</span></span>
<span class="line"><span>			&lt;groupId&gt;org.springdoc&lt;/groupId&gt;</span></span>
<span class="line"><span>			&lt;artifactId&gt;springdoc-openapi-starter-webmvc-ui&lt;/artifactId&gt;</span></span>
<span class="line"><span>			&lt;version&gt;2.5.0&lt;/version&gt;</span></span>
<span class="line"><span>		&lt;/dependency&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>		&lt;dependency&gt;</span></span>
<span class="line"><span>			&lt;groupId&gt;org.hibernate&lt;/groupId&gt;</span></span>
<span class="line"><span>			&lt;artifactId&gt;hibernate-jpamodelgen&lt;/artifactId&gt;</span></span>
<span class="line"><span>			&lt;version&gt;6.1.7.Final&lt;/version&gt;</span></span>
<span class="line"><span>		&lt;/dependency&gt;</span></span>
<span class="line"><span>	&lt;/dependencies&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>	&lt;build&gt;</span></span>
<span class="line"><span>		&lt;plugins&gt;</span></span>
<span class="line"><span>			&lt;plugin&gt;</span></span>
<span class="line"><span>				&lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span></span>
<span class="line"><span>				&lt;artifactId&gt;spring-boot-maven-plugin&lt;/artifactId&gt;</span></span>
<span class="line"><span>				&lt;configuration&gt;</span></span>
<span class="line"><span>					&lt;excludes&gt;</span></span>
<span class="line"><span>						&lt;exclude&gt;</span></span>
<span class="line"><span>							&lt;groupId&gt;org.projectlombok&lt;/groupId&gt;</span></span>
<span class="line"><span>							&lt;artifactId&gt;lombok&lt;/artifactId&gt;</span></span>
<span class="line"><span>						&lt;/exclude&gt;</span></span>
<span class="line"><span>					&lt;/excludes&gt;</span></span>
<span class="line"><span>				&lt;/configuration&gt;</span></span>
<span class="line"><span>			&lt;/plugin&gt;</span></span>
<span class="line"><span>		&lt;/plugins&gt;</span></span>
<span class="line"><span>	&lt;/build&gt;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>&lt;/project&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><br><h2 id="src-test-java-ru-atomskills-back-backapplicationtest-java" tabindex="-1"><a class="header-anchor" href="#src-test-java-ru-atomskills-back-backapplicationtest-java"><span>src/test/java/ru/atomskills/back/BackApplicationTest.java</span></a></h2><p>Данный файл запускает модуль тестирования JavaSpring приложения. <br><br></p><h2 id="src-main-java-ru-atomskills-back" tabindex="-1"><a class="header-anchor" href="#src-main-java-ru-atomskills-back"><span>src/main/java/ru/atomskills/back</span></a></h2><h3 id="configs" tabindex="-1"><a class="header-anchor" href="#configs"><span>configs</span></a></h3><p>Данная папка содержит различные конфигурации безопасности и работы с JWT.</p><hr><h4 id="jwtauthfilter-java" tabindex="-1"><a class="header-anchor" href="#jwtauthfilter-java"><span>JwtAuthFilter.java</span></a></h4><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>package ru.atomskills.back.configs;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>import jakarta.servlet.FilterChain;</span></span>
<span class="line"><span>import jakarta.servlet.ServletException;</span></span>
<span class="line"><span>import jakarta.servlet.http.HttpServletRequest;</span></span>
<span class="line"><span>import jakarta.servlet.http.HttpServletResponse;</span></span>
<span class="line"><span>import lombok.RequiredArgsConstructor;</span></span>
<span class="line"><span>import org.springframework.security.authentication.UsernamePasswordAuthenticationToken;</span></span>
<span class="line"><span>import org.springframework.security.core.context.SecurityContextHolder;</span></span>
<span class="line"><span>import org.springframework.security.core.userdetails.UserDetails;</span></span>
<span class="line"><span>import org.springframework.security.web.authentication.WebAuthenticationDetailsSource;</span></span>
<span class="line"><span>import org.springframework.stereotype.Component;</span></span>
<span class="line"><span>import org.springframework.web.filter.OncePerRequestFilter;</span></span>
<span class="line"><span>import ru.atomskills.back.services.AppUsersService;</span></span>
<span class="line"><span>import ru.atomskills.back.utils.JwtUtil;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>import java.io.IOException;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>import static org.springframework.http.HttpHeaders.AUTHORIZATION;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>@Component</span></span>
<span class="line"><span>@RequiredArgsConstructor</span></span>
<span class="line"><span>public class JwtAuthFilter extends OncePerRequestFilter {</span></span>
<span class="line"><span>    private final AppUsersService appUsersService;</span></span>
<span class="line"><span>    private final JwtUtil jwtUtil;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    @Override</span></span>
<span class="line"><span>    protected void doFilterInternal(</span></span>
<span class="line"><span>            HttpServletRequest request,</span></span>
<span class="line"><span>            HttpServletResponse response,</span></span>
<span class="line"><span>            FilterChain filterChain</span></span>
<span class="line"><span>    ) throws ServletException, IOException {</span></span>
<span class="line"><span>        final String authHeader = request.getHeader(AUTHORIZATION);</span></span>
<span class="line"><span>        final String username;</span></span>
<span class="line"><span>        final String jwtToken;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>        if (authHeader == null || !authHeader.startsWith(&quot;Bearer&quot;)) {</span></span>
<span class="line"><span>            filterChain.doFilter(request, response);</span></span>
<span class="line"><span>            return;</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>        jwtToken = authHeader.substring(7);</span></span>
<span class="line"><span>        username = jwtUtil.extractUsername(jwtToken);</span></span>
<span class="line"><span>        if (username != null &amp;&amp; SecurityContextHolder.getContext().getAuthentication() == null) {</span></span>
<span class="line"><span>            UserDetails userDetails = appUsersService.loadUserByUsername(username);</span></span>
<span class="line"><span>            final boolean isTokenValid = jwtUtil.isTokenValid(jwtToken, userDetails);</span></span>
<span class="line"><span>            if (isTokenValid) {</span></span>
<span class="line"><span>                UsernamePasswordAuthenticationToken authToken =</span></span>
<span class="line"><span>                        new UsernamePasswordAuthenticationToken(userDetails, null, userDetails.getAuthorities());</span></span>
<span class="line"><span>                authToken.setDetails(new WebAuthenticationDetailsSource().buildDetails(request));</span></span>
<span class="line"><span>                SecurityContextHolder.getContext().setAuthentication(authToken);</span></span>
<span class="line"><span>            }</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>        filterChain.doFilter(request, response);</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    @Override</span></span>
<span class="line"><span>    protected boolean shouldNotFilter(HttpServletRequest request) {</span></span>
<span class="line"><span>        String path = request.getServletPath();</span></span>
<span class="line"><span>        return path.startsWith(&quot;/auth&quot;);</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><br><h4 id="securityconfig-java" tabindex="-1"><a class="header-anchor" href="#securityconfig-java"><span>SecurityConfig.java</span></a></h4><p>Конфигурация безопасности приложения.<br><br> Для шифрования паролей используется встроенный метод bcrypt - адаптивная криптографическая хеш-функция формирования ключа, используемого для защищенного хранения паролей.</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>package ru.atomskills.back.configs;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>import lombok.RequiredArgsConstructor;</span></span>
<span class="line"><span>import org.springframework.context.annotation.Bean;</span></span>
<span class="line"><span>import org.springframework.context.annotation.Configuration;</span></span>
<span class="line"><span>import org.springframework.http.HttpMethod;</span></span>
<span class="line"><span>import org.springframework.security.authentication.AuthenticationManager;</span></span>
<span class="line"><span>import org.springframework.security.authentication.AuthenticationProvider;</span></span>
<span class="line"><span>import org.springframework.security.authentication.dao.DaoAuthenticationProvider;</span></span>
<span class="line"><span>import org.springframework.security.config.Customizer;</span></span>
<span class="line"><span>import org.springframework.security.config.annotation.authentication.configuration.AuthenticationConfiguration;</span></span>
<span class="line"><span>import org.springframework.security.config.annotation.web.builders.HttpSecurity;</span></span>
<span class="line"><span>import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;</span></span>
<span class="line"><span>import org.springframework.security.config.annotation.web.configurers.AbstractHttpConfigurer;</span></span>
<span class="line"><span>import org.springframework.security.config.http.SessionCreationPolicy;</span></span>
<span class="line"><span>import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;</span></span>
<span class="line"><span>import org.springframework.security.web.SecurityFilterChain;</span></span>
<span class="line"><span>import org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter;</span></span>
<span class="line"><span>import org.springframework.web.cors.CorsConfiguration;</span></span>
<span class="line"><span>import org.springframework.web.cors.CorsConfigurationSource;</span></span>
<span class="line"><span>import org.springframework.web.cors.UrlBasedCorsConfigurationSource;</span></span>
<span class="line"><span>import ru.atomskills.back.services.AppUsersService;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>import java.util.List;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>@Configuration</span></span>
<span class="line"><span>@EnableWebSecurity</span></span>
<span class="line"><span>@RequiredArgsConstructor</span></span>
<span class="line"><span>public class SecurityConfig {</span></span>
<span class="line"><span>    private final JwtAuthFilter jwtAuthFilter;</span></span>
<span class="line"><span>    private final AppUsersService appUsersService;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    @Bean</span></span>
<span class="line"><span>    public SecurityFilterChain securityFilterChain(HttpSecurity http) throws Exception {</span></span>
<span class="line"><span>        http</span></span>
<span class="line"><span>            .cors(Customizer.withDefaults())</span></span>
<span class="line"><span>            .csrf(AbstractHttpConfigurer::disable)</span></span>
<span class="line"><span>            .authorizeHttpRequests((authorize) -&gt; authorize</span></span>
<span class="line"><span>//                .requestMatchers(&quot;/auth/**&quot;, &quot;/swagger-ui/**&quot;, &quot;/v3/api-docs/**&quot;).permitAll()</span></span>
<span class="line"><span>//                .requestMatchers(HttpMethod.POST, &quot;/entities/**&quot;).hasRole(&quot;ADMIN&quot;)</span></span>
<span class="line"><span>//                .requestMatchers(HttpMethod.PUT, &quot;/entities/**&quot;).hasRole(&quot;ADMIN&quot;)</span></span>
<span class="line"><span>//                .requestMatchers(HttpMethod.DELETE, &quot;/entities/**&quot;).hasRole(&quot;ADMIN&quot;)</span></span>
<span class="line"><span>//                .anyRequest().authenticated()</span></span>
<span class="line"><span>                            .anyRequest().permitAll()</span></span>
<span class="line"><span>            )</span></span>
<span class="line"><span>            .sessionManagement((session) -&gt; session.sessionCreationPolicy(SessionCreationPolicy.STATELESS))</span></span>
<span class="line"><span>            .authenticationProvider(authenticationProvider())</span></span>
<span class="line"><span>            .addFilterBefore(jwtAuthFilter, UsernamePasswordAuthenticationFilter.class);</span></span>
<span class="line"><span>        return http.build();</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    @Bean</span></span>
<span class="line"><span>    public AuthenticationProvider authenticationProvider() {</span></span>
<span class="line"><span>        final DaoAuthenticationProvider authenticationProvider = new DaoAuthenticationProvider();</span></span>
<span class="line"><span>        authenticationProvider.setUserDetailsService(appUsersService);</span></span>
<span class="line"><span>        authenticationProvider.setPasswordEncoder(bCryptPasswordEncoder());</span></span>
<span class="line"><span>        return authenticationProvider;</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    @Bean</span></span>
<span class="line"><span>    public AuthenticationManager authenticationManager(AuthenticationConfiguration authenticationConfiguration) throws Exception{</span></span>
<span class="line"><span>        return authenticationConfiguration.getAuthenticationManager();</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    @Bean</span></span>
<span class="line"><span>    public BCryptPasswordEncoder bCryptPasswordEncoder() {</span></span>
<span class="line"><span>        return new BCryptPasswordEncoder();</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    @Bean</span></span>
<span class="line"><span>    CorsConfigurationSource corsConfigurationSource() {</span></span>
<span class="line"><span>        CorsConfiguration configuration = new CorsConfiguration();</span></span>
<span class="line"><span>        configuration.setAllowedOrigins(List.of(&quot;*&quot;));</span></span>
<span class="line"><span>        configuration.setAllowedMethods(List.of(&quot;*&quot;));</span></span>
<span class="line"><span>        configuration.setAllowedHeaders(List.of(&quot;*&quot;));</span></span>
<span class="line"><span>        configuration.setExposedHeaders(List.of(&quot;*&quot;));</span></span>
<span class="line"><span>        UrlBasedCorsConfigurationSource source = new UrlBasedCorsConfigurationSource();</span></span>
<span class="line"><span>        source.registerCorsConfiguration(&quot;/**&quot;, configuration);</span></span>
<span class="line"><span>        return source;</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><br><br></p><h3 id="controllers" tabindex="-1"><a class="header-anchor" href="#controllers"><span>controllers</span></a></h3><p>Содержит контроллеры в виде API.</p><hr><h4 id="authenticationcontroller-java" tabindex="-1"><a class="header-anchor" href="#authenticationcontroller-java"><span>AuthenticationController.java</span></a></h4>`,39),o=s("h4",{id:"lessonscontroller-java",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#lessonscontroller-java"},[s("span",null,"LessonsController.java")])],-1),u=s("h4",{id:"taskscontroller-java",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#taskscontroller-java"},[s("span",null,"TasksController.java")])],-1),m=s("h4",{id:"topicscontroller-java",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#topicscontroller-java"},[s("span",null,"TopicsController.java")])],-1),b=s("br",null,null,-1),h=s("br",null,null,-1),g=l(`<h3 id="dto" tabindex="-1"><a class="header-anchor" href="#dto"><span>dto</span></a></h3><p>Содержит модели промежуточных данных, передаваемых из Frontend в Backend.</p><hr><h4 id="authrequest-java" tabindex="-1"><a class="header-anchor" href="#authrequest-java"><span>AuthRequest.java</span></a></h4><p>Промежуточная модель данных авторизации</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>package ru.atomskills.back.dto;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>import lombok.Data;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>@Data</span></span>
<span class="line"><span>public class AuthRequest {</span></span>
<span class="line"><span>    private String username;</span></span>
<span class="line"><span>    private String password;</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="lessondto-java" tabindex="-1"><a class="header-anchor" href="#lessondto-java"><span>LessonDto.java</span></a></h4><p>Промежуточная модель данных учебного материала.</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>package ru.atomskills.back.dto;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>import lombok.Builder;</span></span>
<span class="line"><span>import lombok.Data;</span></span>
<span class="line"><span>import ru.atomskills.back.models.Lesson;</span></span>
<span class="line"><span>import ru.atomskills.back.models.Task;</span></span>
<span class="line"><span>import ru.atomskills.back.models.Topic;</span></span>
<span class="line"><span>import ru.atomskills.back.models.Trait;</span></span>
<span class="line"><span>import ru.atomskills.back.services.LessonsService;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>import java.util.List;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>@Data</span></span>
<span class="line"><span>@Builder</span></span>
<span class="line"><span>public class LessonDto {</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    private String code;</span></span>
<span class="line"><span>    private String title;</span></span>
<span class="line"><span>    private String content;</span></span>
<span class="line"><span>    private List&lt;Trait&gt; traits;</span></span>
<span class="line"><span>    private List&lt;Lesson.Supplement&gt; supplement;</span></span>
<span class="line"><span>    private List&lt;TaskShortDto&gt; tasks;</span></span>
<span class="line"><span>    private String author;</span></span>
<span class="line"><span>    private List&lt;Topic&gt; topics;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    public static LessonDto fromEntity(Lesson lesson) {</span></span>
<span class="line"><span>        return LessonDto.builder()</span></span>
<span class="line"><span>                .code(lesson.getCode())</span></span>
<span class="line"><span>                .title(lesson.getTitle())</span></span>
<span class="line"><span>                .content(lesson.getContent())</span></span>
<span class="line"><span>                .traits(lesson.getTraits())</span></span>
<span class="line"><span>                .supplement(lesson.getSupplement())</span></span>
<span class="line"><span>                .tasks(lesson.getTasks().stream().map(TaskShortDto::fromEntity).toList())</span></span>
<span class="line"><span>                .author(lesson.getAuthor())</span></span>
<span class="line"><span>                .topics(lesson.getTopics())</span></span>
<span class="line"><span>                .build();</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="lessonshortdto-java" tabindex="-1"><a class="header-anchor" href="#lessonshortdto-java"><span>LessonShortDto.java</span></a></h4><p>Представляет промежуточную модель данных учебных материалов с сокращенной информацией по ней.</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>package ru.atomskills.back.dto;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>import lombok.Builder;</span></span>
<span class="line"><span>import lombok.Data;</span></span>
<span class="line"><span>import ru.atomskills.back.models.Lesson;</span></span>
<span class="line"><span>import ru.atomskills.back.models.Trait;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>import java.util.List;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>@Data</span></span>
<span class="line"><span>@Builder</span></span>
<span class="line"><span>public class LessonShortDto {</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    private String code;</span></span>
<span class="line"><span>    private String title;</span></span>
<span class="line"><span>    private List&lt;Trait&gt; traits;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    public static LessonShortDto fromEntity(Lesson lesson) {</span></span>
<span class="line"><span>        return LessonShortDto.builder()</span></span>
<span class="line"><span>                .code(lesson.getCode())</span></span>
<span class="line"><span>                .title(lesson.getTitle())</span></span>
<span class="line"><span>                .traits(lesson.getTraits())</span></span>
<span class="line"><span>                .build();</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="loginresponse-java" tabindex="-1"><a class="header-anchor" href="#loginresponse-java"><span>LoginResponse.java</span></a></h4><p>Представляет промежуточную модель данных ответа на запрос авторизации.</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>package ru.atomskills.back.dto;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>import lombok.Builder;</span></span>
<span class="line"><span>import lombok.Data;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>@Data</span></span>
<span class="line"><span>@Builder</span></span>
<span class="line"><span>public class LoginResponse {</span></span>
<span class="line"><span>    private String token;</span></span>
<span class="line"><span>    private String refreshToken;</span></span>
<span class="line"><span>    private long expiresIn;</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="refreshrequest-java" tabindex="-1"><a class="header-anchor" href="#refreshrequest-java"><span>RefreshRequest.java</span></a></h4><p>Представляет промежуточную модель данных на обновление JWT токена.</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>package ru.atomskills.back.dto;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>import lombok.Data;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>@Data</span></span>
<span class="line"><span>public class RefreshRequest {</span></span>
<span class="line"><span>    private String refreshToken;</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="taskdto-java" tabindex="-1"><a class="header-anchor" href="#taskdto-java"><span>TaskDto.java</span></a></h4><p>Представляет промежуточную модель данных задания.</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>package ru.atomskills.back.dto;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>import lombok.Data;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>@Data</span></span>
<span class="line"><span>public class RefreshRequest {</span></span>
<span class="line"><span>    private String refreshToken;</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="taskshortdto-java" tabindex="-1"><a class="header-anchor" href="#taskshortdto-java"><span>TaskShortDto.java</span></a></h4><p>Представляет промежуточную модель данных задания с скоращенной информацией по ней.</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>package ru.atomskills.back.dto;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>import lombok.Builder;</span></span>
<span class="line"><span>import lombok.Data;</span></span>
<span class="line"><span>import ru.atomskills.back.models.Task;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>@Data</span></span>
<span class="line"><span>@Builder</span></span>
<span class="line"><span>public class TaskShortDto {</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    private String code;</span></span>
<span class="line"><span>    private String title;</span></span>
<span class="line"><span>    private Integer difficulty;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    public static TaskShortDto fromEntity(Task task) {</span></span>
<span class="line"><span>        return TaskShortDto.builder()</span></span>
<span class="line"><span>                .code(task.getCode())</span></span>
<span class="line"><span>                .title(task.getTitle())</span></span>
<span class="line"><span>                .difficulty(task.getDifficulty())</span></span>
<span class="line"><span>                .build();</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><br><br></p><h3 id="models">models</h3>`,26),k=l(`<hr><h4 id="appuser-java" tabindex="-1"><a class="header-anchor" href="#appuser-java"><span>AppUser.java</span></a></h4><p>Модель данных пользователя системы</p><h4 id="feature-java" tabindex="-1"><a class="header-anchor" href="#feature-java"><span>Feature.java</span></a></h4><p>Модель данных пользователя системы. Загружается из файлов окружения.</p><h4 id="lesson-java" tabindex="-1"><a class="header-anchor" href="#lesson-java"><span>Lesson.java</span></a></h4><p>Модель данных пользователя системы. Загружается из файлов окружения.</p><h4 id="role-java" tabindex="-1"><a class="header-anchor" href="#role-java"><span>Role.java</span></a></h4><p>Модель данных пользователя системы. Инициализируется при запуске приложения начальными данными. Всего две роли:</p><ul><li>Обучающийся;</li><li>Наставник;</li></ul><h4 id="task-java" tabindex="-1"><a class="header-anchor" href="#task-java"><span>Task.java</span></a></h4><p>Модель данных пользователя системы. Загружается из файлов окружения.</p><h4 id="taskprogress-java" tabindex="-1"><a class="header-anchor" href="#taskprogress-java"><span>TaskProgress.java</span></a></h4><p>Модель данных пользователя системы</p><h4 id="tasksubmission-java" tabindex="-1"><a class="header-anchor" href="#tasksubmission-java"><span>TaskSubmission.java</span></a></h4><p>Модель данных пользователя системы</p><h4 id="topic-java" tabindex="-1"><a class="header-anchor" href="#topic-java"><span>Topic.java</span></a></h4><p>Модель данных пользователя системы. Загружается из файлов окружения.</p><h4 id="trait-java" tabindex="-1"><a class="header-anchor" href="#trait-java"><span>Trait.java</span></a></h4><p>Модель данных пользователя системы. Загружается из файлов окружения. <br><br></p><h3 id="repositories" tabindex="-1"><a class="header-anchor" href="#repositories"><span>repositories</span></a></h3><p>Содержит репозитории для запросов из базы данных. Структура аналогична структуре <a href="#models">models</a>. <br><br></p><h3 id="services" tabindex="-1"><a class="header-anchor" href="#services"><span>services</span></a></h3><p>Содержит бизнес-логику для работы с моделями</p><hr><h4 id="appuserservice-java" tabindex="-1"><a class="header-anchor" href="#appuserservice-java"><span>AppUserService.java</span></a></h4><p>Сервис для работы с моделью пользователя.</p><h4 id="authenticationservice-java" tabindex="-1"><a class="header-anchor" href="#authenticationservice-java"><span>AuthenticationService.java</span></a></h4><p>Сервис для работы с моделью пользователя.</p><h4 id="fileloader-java" tabindex="-1"><a class="header-anchor" href="#fileloader-java"><span>FileLoader.java</span></a></h4><p>Сервис для работы с моделью пользователя.</p><h4 id="lessonsservice-java" tabindex="-1"><a class="header-anchor" href="#lessonsservice-java"><span>LessonsService.java</span></a></h4><p>Сервис для работы с моделью пользователя.</p><h4 id="tasksservice-java" tabindex="-1"><a class="header-anchor" href="#tasksservice-java"><span>TasksService.java</span></a></h4><p>Сервис для работы с моделью пользователя.</p><h4 id="topicsservice-java" tabindex="-1"><a class="header-anchor" href="#topicsservice-java"><span>TopicsService.java</span></a></h4><p>Сервис для работы с моделью пользователя. <br><br></p><h3 id="utils" tabindex="-1"><a class="header-anchor" href="#utils"><span>utils</span></a></h3><p>Утилиты для работа с файлами и JWT токенами.</p><hr><h4 id="filesutil-java" tabindex="-1"><a class="header-anchor" href="#filesutil-java"><span>FilesUtil.java</span></a></h4><p>Работа с файлами.</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>package ru.atomskills.back.utils;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>import org.springframework.core.io.PathResource;</span></span>
<span class="line"><span>import org.springframework.core.io.Resource;</span></span>
<span class="line"><span>import org.springframework.web.multipart.MultipartFile;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>import java.io.IOException;</span></span>
<span class="line"><span>import java.io.InputStream;</span></span>
<span class="line"><span>import java.nio.file.Files;</span></span>
<span class="line"><span>import java.nio.file.Path;</span></span>
<span class="line"><span>import java.nio.file.Paths;</span></span>
<span class="line"><span>import java.nio.file.StandardCopyOption;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>public class FilesUtil {</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    private final static String BASE_DIR = &quot;files&quot;;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    public static void saveFile(String path, String fileName, MultipartFile multipartFile) throws IOException {</span></span>
<span class="line"><span>        Path uploadPath = Paths.get(BASE_DIR, path);</span></span>
<span class="line"><span></span></span>
<span class="line"><span>        if (!Files.exists(uploadPath)) {</span></span>
<span class="line"><span>            Files.createDirectories(uploadPath);</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>        try (InputStream inputStream = multipartFile.getInputStream()) {</span></span>
<span class="line"><span>            Path filePath = uploadPath.resolve(fileName);</span></span>
<span class="line"><span>            Files.copy(inputStream, filePath, StandardCopyOption.REPLACE_EXISTING);</span></span>
<span class="line"><span>        } catch (IOException ioe) {</span></span>
<span class="line"><span>            throw new IOException(&quot;Could not save file: &quot; + fileName, ioe);</span></span>
<span class="line"><span>        }</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    public static Resource getFile(String path, String fileName) {</span></span>
<span class="line"><span>        return new PathResource(Paths.get(BASE_DIR, path, fileName));</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="jwtutil-java" tabindex="-1"><a class="header-anchor" href="#jwtutil-java"><span>JwtUtil.java</span></a></h4><p>Работа с JWT токенами.</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#24292e;--shiki-dark:#abb2bf;--shiki-light-bg:#fff;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes github-light one-dark-pro vp-code"><code><span class="line"><span>package ru.atomskills.back.utils;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>import io.jsonwebtoken.Claims;</span></span>
<span class="line"><span>import io.jsonwebtoken.Jwts;</span></span>
<span class="line"><span>import io.jsonwebtoken.SignatureAlgorithm;</span></span>
<span class="line"><span>import io.jsonwebtoken.security.Keys;</span></span>
<span class="line"><span>import org.springframework.security.core.userdetails.UserDetails;</span></span>
<span class="line"><span>import org.springframework.stereotype.Component;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>import javax.crypto.SecretKey;</span></span>
<span class="line"><span>import java.util.Date;</span></span>
<span class="line"><span>import java.util.concurrent.TimeUnit;</span></span>
<span class="line"><span>import java.util.function.Function;</span></span>
<span class="line"><span></span></span>
<span class="line"><span>@Component</span></span>
<span class="line"><span>public class JwtUtil {</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    private static final Long EXPIRATION_TIME = TimeUnit.HOURS.toMillis(1);</span></span>
<span class="line"><span>    private static final Long REFRESH_EXPIRATION_TIME = TimeUnit.DAYS.toMillis(1);</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    private final SecretKey key = Keys.secretKeyFor(SignatureAlgorithm.HS256);</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    public String extractUsername(String token) {</span></span>
<span class="line"><span>        return extractClaim(token, Claims::getSubject);</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    public Date extractExpiration(String token) {</span></span>
<span class="line"><span>        return extractClaim(token, Claims::getExpiration);</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    public boolean hasClaim(String token, String claimName) {</span></span>
<span class="line"><span>        final Claims claims = extractAllClaims(token);</span></span>
<span class="line"><span>        return claims.get(claimName) != null;</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    private &lt;T&gt; T extractClaim(String token, Function&lt;Claims, T&gt; claimsResolver) {</span></span>
<span class="line"><span>        final Claims claims = extractAllClaims(token);</span></span>
<span class="line"><span>        return claimsResolver.apply(claims);</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    private Claims extractAllClaims(String token) {</span></span>
<span class="line"><span>        return Jwts.parserBuilder().setSigningKey(key).build().parseClaimsJws(token).getBody();</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    public boolean isTokenExpired(String token) {</span></span>
<span class="line"><span>        return extractExpiration(token).before(new Date());</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    public String generateAccessToken(UserDetails userDetails) {</span></span>
<span class="line"><span>        return Jwts.builder()</span></span>
<span class="line"><span>                .setSubject(userDetails.getUsername())</span></span>
<span class="line"><span>                .claim(&quot;authorities&quot;, userDetails.getAuthorities())</span></span>
<span class="line"><span>                .setIssuedAt(new Date(System.currentTimeMillis()))</span></span>
<span class="line"><span>                .setExpiration(new Date(System.currentTimeMillis() + EXPIRATION_TIME))</span></span>
<span class="line"><span>                .signWith(key).compact();</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    public String generateRefreshToken(UserDetails userDetails) {</span></span>
<span class="line"><span>        return Jwts.builder()</span></span>
<span class="line"><span>                .setSubject(userDetails.getUsername())</span></span>
<span class="line"><span>                .setExpiration(new Date(System.currentTimeMillis() + REFRESH_EXPIRATION_TIME))</span></span>
<span class="line"><span>                .signWith(key)</span></span>
<span class="line"><span>                .compact();</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    public long getExpirationTime() {</span></span>
<span class="line"><span>        return EXPIRATION_TIME;</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    public boolean isTokenValid(String token, UserDetails userDetails) {</span></span>
<span class="line"><span>        final String username = extractUsername(token);</span></span>
<span class="line"><span>        return (username.equals(userDetails.getUsername()) &amp;&amp; !isTokenExpired(token));</span></span>
<span class="line"><span>    }</span></span>
<span class="line"><span>}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,46);function f(j,S){const a=t("RouteLink");return c(),r("div",null,[v,s("p",null,[n("Контроллер для работы с авторизацией и регистрацией. Подробнее по "),i(a,{to:"/api/auth.html"},{default:e(()=>[n("ссылке")]),_:1}),n(".")]),o,s("p",null,[n("Контроллер для работы с моделями учебных материалов. Подробнее по "),i(a,{to:"/api/lessons.html"},{default:e(()=>[n("ссылке")]),_:1}),n(".")]),u,s("p",null,[n("Контроллер для работы с моделями заданий. Подробнее по "),i(a,{to:"/api/tasks.html"},{default:e(()=>[n("ссылке")]),_:1}),n(".")]),m,s("p",null,[n("Контроллер для работы с моделями тем. Подробнее по "),i(a,{to:"/api/topics.html"},{default:e(()=>[n("ссылке")]),_:1}),n(". "),b,h]),g,n(" Содержит модели данных, сохраняемые в базу данных. "),k])}const x=p(d,[["render",f],["__file","backend.html.vue"]]),I=JSON.parse('{"path":"/project/backend.html","title":"Backend-проект","lang":"ru-RU","frontmatter":{},"headers":[{"level":2,"title":"Схема проекта в виде дерева ASCII","slug":"схема-проекта-в-виде-дерева-ascii","link":"#схема-проекта-в-виде-дерева-ascii","children":[]},{"level":2,"title":"Dockerfile","slug":"dockerfile","link":"#dockerfile","children":[]},{"level":2,"title":"pom.xml","slug":"pom-xml","link":"#pom-xml","children":[]},{"level":2,"title":"src/test/java/ru/atomskills/back/BackApplicationTest.java","slug":"src-test-java-ru-atomskills-back-backapplicationtest-java","link":"#src-test-java-ru-atomskills-back-backapplicationtest-java","children":[]},{"level":2,"title":"src/main/java/ru/atomskills/back","slug":"src-main-java-ru-atomskills-back","link":"#src-main-java-ru-atomskills-back","children":[{"level":3,"title":"configs","slug":"configs","link":"#configs","children":[]},{"level":3,"title":"controllers","slug":"controllers","link":"#controllers","children":[]},{"level":3,"title":"dto","slug":"dto","link":"#dto","children":[]},{"level":3,"title":"repositories","slug":"repositories","link":"#repositories","children":[]},{"level":3,"title":"services","slug":"services","link":"#services","children":[]},{"level":3,"title":"utils","slug":"utils","link":"#utils","children":[]}]}],"git":{"createdTime":1718480695000,"updatedTime":1718693150000,"contributors":[{"name":"karen","email":"karelio2001@mail.ru","commits":2}]},"readingTime":{"minutes":5.41,"words":1623},"filePathRelative":"project/backend.md","localizedDate":"16 июня 2024 г."}');export{x as comp,I as data};
